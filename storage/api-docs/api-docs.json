{
    "openapi": "3.0.0",
    "info": {
        "title": "API's D'Gush",
        "description": "API's for D'Gush store",
        "version": "1.0"
    },
    "paths": {
        "/dgush-backend/public/api/access": {
            "get": {
                "tags": [
                    "Access"
                ],
                "summary": "Get all accesses",
                "operationId": "77b3ad8200560de1e87e70e9d169798d",
                "responses": {
                    "200": {
                        "description": "Returns all accesses",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Access"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "TypeUser Accesses"
                ],
                "summary": "Add access to typeuser",
                "operationId": "2d257cfdc707b93c75d52dcc2ac12d6f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "optionmenu_id",
                                    "typeuser_id"
                                ],
                                "properties": {
                                    "optionmenu_id": {
                                        "type": "string",
                                        "example": "1,2,3"
                                    },
                                    "typeuser_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Optionmenus successfully added to the typeuser",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Optionmenus 1, 2, 3 successfully added to the typeuser"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "The access already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The access already exists"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Typeuser or optionmenu not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Typeuser not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The optionmenu_id cannot have a comma at the end",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The optionmenu_id cannot have a comma at the end"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/access/{id}": {
            "get": {
                "tags": [
                    "TypeUser Accesses"
                ],
                "summary": "Get access",
                "operationId": "cd00615f544e989d82ac844ca07d862f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Access ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the accesses of the typeuser",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accesses": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Access"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Typeuser not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Typeuser not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "TypeUser Accesses"
                ],
                "summary": "Update access",
                "operationId": "df7e3d95da02062c8905da87104782ae",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Access ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "optionmenu_id"
                                ],
                                "properties": {
                                    "optionmenu_id": {
                                        "type": "string",
                                        "example": "1,2,3"
                                    },
                                    "typeuser_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Optionmenus successfully updated to the typeuser",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Optionmenus 1, 2, 3 successfully updated to the typeuser"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "You cannot update the admin access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You cannot update the admin access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Optionmenu or typeuser not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Optionmenu not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The optionmenu_id cannot have a comma at the end",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The optionmenu_id cannot have a comma at the end"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Access"
                ],
                "summary": "Delete access",
                "operationId": "67e33067cf67ca35d93b54225dae0af0",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Access ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "You cannot delete the admin access",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You cannot delete the admin access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Access not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Access not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/logout": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout user",
                "description": "Log out user.",
                "operationId": "5a210e49e0c1b976aa42c88342940ee6",
                "responses": {
                    "200": {
                        "description": "User logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login user",
                "description": "Authenticate user and generate access token",
                "operationId": "4d17a133234e18b9ca431ad860118ac8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "example@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "abcd1234"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "10|DhvyeOsYelrCP7YXyx0RGG2E9KFG2PE9RFEjqWwwe69d7147"
                                        },
                                        "user": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "number",
                                                        "example": "11"
                                                    },
                                                    "names": {
                                                        "type": "string",
                                                        "example": "D Gush"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "dgush@gmail.com"
                                                    },
                                                    "typeuser_id": {
                                                        "type": "number",
                                                        "example": "2"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-02-23T00:09:16.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-02-23T12:13:45.000000Z"
                                                    },
                                                    "deleted_at": {
                                                        "type": "string",
                                                        "example": "null"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "typeuser": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "number",
                                                        "example": "6"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Admin"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-02-23T00:09:16.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-02-23T12:13:45.000000Z"
                                                    },
                                                    "deleted_at": {
                                                        "type": "string",
                                                        "example": "null"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "optionMenuAccess": {
                                            "type": "string",
                                            "example": "1, 2, 3, 4"
                                        },
                                        "permissions": {
                                            "type": "string",
                                            "example": "1, 2, 3, 4, 5, 6, 7, 8, 9, 10"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Credentials are invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid credentials."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/authenticate": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user",
                "description": "Get user and access token",
                "operationId": "b1c7cb1830a3eaba1e14b5c4cf1d0e5f",
                "responses": {
                    "200": {
                        "description": "User logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "10|DhvyeOsYelrCP7YXyx0RGG2E9KFG2PE9RFEjqWwwe69d7147"
                                        },
                                        "user": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "number",
                                                        "example": "11"
                                                    },
                                                    "names": {
                                                        "type": "string",
                                                        "example": "D Gush"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "dgush@gmail.com"
                                                    },
                                                    "typeuser_id": {
                                                        "type": "number",
                                                        "example": "2"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-02-23T00:09:16.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-02-23T12:13:45.000000Z"
                                                    },
                                                    "deleted_at": {
                                                        "type": "string",
                                                        "example": "null"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "typeuser": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "number",
                                                        "example": "6"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Admin"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-02-23T00:09:16.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-02-23T12:13:45.000000Z"
                                                    },
                                                    "deleted_at": {
                                                        "type": "string",
                                                        "example": "null"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "optionMenuAccess": {
                                            "type": "string",
                                            "example": "1, 2, 3, 4"
                                        },
                                        "permissions": {
                                            "type": "string",
                                            "example": "1, 2, 3, 4, 5, 6, 7, 8, 9, 10"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register user",
                "description": "Register a new user",
                "operationId": "a52feff2fd0ba6c0f64284314cbb36a1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "D Gush"
                                    },
                                    "lastnames": {
                                        "type": "string",
                                        "example": "Gush"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "dgush123@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "abcd1234"
                                    },
                                    "accept_terms": {
                                        "type": "boolean",
                                        "example": "true"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "10|DhvyeOsYelrCP7YXyx0RGG2E9KFG2PE9RFEjqWwwe69d7147"
                                        },
                                        "user": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "number",
                                                        "example": "11"
                                                    },
                                                    "names": {
                                                        "type": "string",
                                                        "example": "D Gush"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "dgush123@gmail.com"
                                                    },
                                                    "typeuser_id": {
                                                        "type": "number",
                                                        "example": "2"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "typeuser": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "number",
                                                        "example": "2"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "User"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "optionMenuAccess": {
                                            "type": "string",
                                            "example": "1, 2, 3, 4"
                                        },
                                        "permissions": {
                                            "type": "string",
                                            "example": "1, 2, 3, 4, 5, 6, 7, 8, 9, 10"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "The email has already been taken."
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "You must accept the terms and conditions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "You must accept the terms and conditions"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/refreshtoken": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user",
                "description": "Refresh access token",
                "operationId": "62fc1db5a371db04f74005a1a1019bbd",
                "responses": {
                    "200": {
                        "description": "Token refreshed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "10|DhvyeOsYelrCP7YXyx0RGG2E9KFG2PE9RFEjqWwwe69d7147"
                                        },
                                        "user": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "number",
                                                        "example": "11"
                                                    },
                                                    "names": {
                                                        "type": "string",
                                                        "example": "D Gush"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "dgush@gmail.com"
                                                    },
                                                    "typeuser_id": {
                                                        "type": "number",
                                                        "example": "2"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-02-23T00:09:16.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-02-23T12:13:45.000000Z"
                                                    },
                                                    "deleted_at": {
                                                        "type": "string",
                                                        "example": "null"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "typeuser": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "number",
                                                        "example": "6"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Admin"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "2024-02-23T00:09:16.000000Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "2024-02-23T12:13:45.000000Z"
                                                    },
                                                    "deleted_at": {
                                                        "type": "string",
                                                        "example": "null"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "optionMenuAccess": {
                                            "type": "string",
                                            "example": "1, 2, 3, 4"
                                        },
                                        "permissions": {
                                            "type": "string",
                                            "example": "1, 2, 3, 4, 5, 6, 7, 8, 9, 10"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "User not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/category": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Show all categories",
                "description": "SHOW ALL CATEGORIES",
                "operationId": "c8db5bbb7ca12b09e9f7239b599946c4",
                "responses": {
                    "200": {
                        "description": "Show all categories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Category 1"
                                            },
                                            "vaLue": {
                                                "type": "string",
                                                "example": "Category 1"
                                            },
                                            "order": {
                                                "type": "integer",
                                                "example": "1"
                                            },
                                            "subcategories": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/Subcategory"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Category"
                ],
                "summary": "Create a new category",
                "description": "CREATE A NEW CATEGORY",
                "operationId": "494cad06213a4e525b802b4eb56ab514",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Category 1"
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/category/{id}": {
            "get": {
                "tags": [
                    "Category"
                ],
                "summary": "Show a category",
                "description": "SHOW A CATEGORY",
                "operationId": "30e888b457d1bf73120144bc5b578d07",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show a category",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Category 1"
                                        },
                                        "order": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "subcategories": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Subcategory"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Category"
                ],
                "summary": "Update a category",
                "description": "UPDATE A CATEGORY",
                "operationId": "d729c7c18c7c02680bcee065a7491ed9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Category 1"
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Category"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Category"
                ],
                "summary": "Delete a category",
                "description": "DELETE A CATEGORY",
                "operationId": "42a13e97b91b83514896dc45bc87ef85",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Category has subcategories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category has subcategories"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/color": {
            "get": {
                "tags": [
                    "Color"
                ],
                "summary": "Get list of all colors",
                "description": "Returns list of all colors",
                "operationId": "getColors",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Color"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Color"
                ],
                "summary": "Store new color",
                "description": "Store new color",
                "operationId": "storeColor",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "hex"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Red"
                                    },
                                    "hex": {
                                        "type": "string",
                                        "example": "#FF0000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Color created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Color"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/color/{id}": {
            "get": {
                "tags": [
                    "Color"
                ],
                "summary": "Get color by id",
                "description": "Returns color by id",
                "operationId": "getColor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Color id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Color"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Color not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Color not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Color"
                ],
                "summary": "Update color",
                "description": "Update color",
                "operationId": "updateColor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Color id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "hex"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Red"
                                    },
                                    "hex": {
                                        "type": "string",
                                        "example": "#FF0000"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Color updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Color"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Color not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Color not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Color"
                ],
                "summary": "Delete color",
                "description": "Delete color",
                "operationId": "deleteColor",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Color id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Color deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Color deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Color not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Color not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Color is associated with products"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/comment": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get all comments",
                "operationId": "e0b13abf70aa67d23b1d26ff5ce3c68a",
                "responses": {
                    "200": {
                        "description": "List of comments",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Comment"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Comment"
                ],
                "summary": "Create a comment",
                "description": "CREATE COMMENT",
                "operationId": "ed4db8f8a9130c3e297ab434ccf4ccec",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "description",
                                    "score",
                                    "user_id",
                                    "product_id"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "This is a comment"
                                    },
                                    "score": {
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User or Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already commented this product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User already commented this product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/comment/{id}": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get a comment",
                "description": "SHOW COMMENT",
                "operationId": "e94bd692ff51a7ef26688c2e3d4904ab",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Comment"
                ],
                "summary": "Update a comment",
                "description": "UPDATE COMMENT",
                "operationId": "68de3c07cecfdf2f3ae061e26b506f61",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "description",
                                    "score",
                                    "user_id",
                                    "product_id"
                                ],
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "This is a comment"
                                    },
                                    "score": {
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "user_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Comment updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment, User or Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already commented this product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User already commented this product"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Delete a comment",
                "description": "DELETE COMMENT",
                "operationId": "43545893215471d1ebbc83b60b279664",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Comment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Comment deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Comment not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Comment not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/coupon": {
            "get": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Get all coupons",
                "description": "Get all coupons",
                "operationId": "22b4bc02e1413a312b97d33029c10d52",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Coupon"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://localhost:8000/api/coupons?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "http://localhost:8000/api/coupons?page=1"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://localhost:8000/api/coupons"
                                        },
                                        "per_page": {
                                            "type": "integer"
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "http://localhost:8000/api/coupons?page=1"
                                        },
                                        "to": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Create a new coupon",
                "description": "Create a new coupon",
                "operationId": "4acbe3c972e1944cdbed3deb33b428c4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CouponRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coupon"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The code has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/coupon/{id}": {
            "get": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Get a specific coupon",
                "description": "Get a specific coupon",
                "operationId": "40d899507fd85120991e8f968f16a161",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coupon"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Coupon not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Coupon not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Update a specific coupon",
                "description": "Update a specific coupon",
                "operationId": "75c24de8cd486cd8d886956abd5ff9aa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CouponRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Coupon"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The code has already been taken."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Coupon not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Coupon not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Coupon"
                ],
                "summary": "Delete a specific coupon",
                "description": "Delete a specific coupon",
                "operationId": "5f2ef56fd23b41b88be34d08f0d7696b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Coupon ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Coupon deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Coupon deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Coupon not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Coupon not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/department": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Get all departments",
                "operationId": "097fe7f4c6cc94fd158eec6f6a5ae6fc",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Department"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/department/{id}": {
            "get": {
                "tags": [
                    "Department"
                ],
                "summary": "Get department by id",
                "operationId": "21b5bf0782a36e4144b30d9de3e6ca6a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of district",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Department"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/district": {
            "get": {
                "tags": [
                    "District"
                ],
                "summary": "Get all districts",
                "operationId": "b51683137af148cd5b446d9d34c30441",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/District"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/district/{id}": {
            "get": {
                "tags": [
                    "District"
                ],
                "summary": "Get district by id",
                "operationId": "af178fa51c3ce25bb8725018116d1860",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of district",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/District"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/filter/product": {
            "get": {
                "tags": [
                    "Filter"
                ],
                "summary": "Get filter product",
                "description": "Return filter product",
                "operationId": "getFilterProduct",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "color": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Color"
                                            }
                                        },
                                        "sizes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Size"
                                            }
                                        },
                                        "subcategories": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Subcategory"
                                            }
                                        },
                                        "price": {
                                            "type": "number",
                                            "example": "100.00"
                                        },
                                        "status": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "onsale"
                                            }
                                        },
                                        "score": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "5"
                                            }
                                        },
                                        "sort": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "name"
                                            }
                                        },
                                        "direction": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": "asc"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/groupmenu": {
            "get": {
                "tags": [
                    "Group Menus"
                ],
                "summary": "Get all Group menus",
                "operationId": "9667debd528e794669c7dc2904bfb633",
                "responses": {
                    "200": {
                        "description": "List of active Group Menus",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupMenu"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Group Menus"
                ],
                "summary": "Create a new Group menu",
                "operationId": "40faafa3d5f8ea61481d345cd13fea45",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "icon",
                                    "order"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Admin"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "fas fa-user"
                                    },
                                    "order": {
                                        "type": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New Group Menu created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupMenu"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/groupmenu/{id}": {
            "get": {
                "tags": [
                    "Group Menus"
                ],
                "summary": "Show the specified Group menu",
                "operationId": "6211043943ca89183db31572181c456e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Group Menu",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group Menu found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "number",
                                            "example": "1"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Profile"
                                        },
                                        "order": {
                                            "type": "number",
                                            "example": "10"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2024-02-23T00:09:16.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2024-02-23T12:13:45.000000Z"
                                        },
                                        "deleted_at": {
                                            "type": "string",
                                            "example": "2024-02-23T12:30:45.000000Z"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group Menu not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group Menu not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Group Menus"
                ],
                "summary": "Update the specified Group menu",
                "operationId": "ea90886f73f0bf7fb7c128e572b21781",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Group Menu",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "icon",
                                    "order"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Admin"
                                    },
                                    "icon": {
                                        "type": "string",
                                        "example": "fas fa-user"
                                    },
                                    "order": {
                                        "type": "number",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Group Menu updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GroupMenu"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group Menu not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group Menu not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Group Menus"
                ],
                "summary": "Remove the specified Group menu",
                "operationId": "7a8c151713fee89744e2370c5bda56b6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Group Menu",
                        "required": true,
                        "schema": {
                            "type": "number"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Group Menu deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group Menu deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Group Menu not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group Menu not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Group Menu has option menus associated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Group Menu has option menus associated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/order": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get all orders",
                "description": "Orders from the authenticated user",
                "operationId": "a35680f94ed255cd9b1cd44e20925789",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Order"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "http://localhost:8000/api/order?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "http://localhost:8000/api/order"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": "10"
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Create a new order",
                "operationId": "e1343e60962174d24371218cc3018e2c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "orderItems"
                                ],
                                "properties": {
                                    "orderItems": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer"
                                                },
                                                "color_id": {
                                                    "type": "integer"
                                                },
                                                "size_id": {
                                                    "type": "integer"
                                                },
                                                "quantity": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "coupon_id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/applyCouponToOrder/{id}": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Apply a coupon to an order",
                "operationId": "16080f7f1b8172a6f9a13bcf96c734d9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "coupon"
                                ],
                                "properties": {
                                    "coupon": {
                                        "type": "string",
                                        "example": "PRIMERA31"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Coupon applied successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The coupon field is required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/confirmOrder": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Confirm order",
                "operationId": "681350b9e5bb6e2d424e5f45a107d541",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "names",
                                    "dni",
                                    "email",
                                    "phone",
                                    "address",
                                    "reference",
                                    "comment",
                                    "method",
                                    "district_id"
                                ],
                                "properties": {
                                    "names": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "dni": {
                                        "type": "string",
                                        "example": "12345678"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@gmail.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "987654321"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St."
                                    },
                                    "reference": {
                                        "type": "string",
                                        "example": "Near the park"
                                    },
                                    "comment": {
                                        "type": "string",
                                        "example": "Please call before delivery"
                                    },
                                    "method": {
                                        "type": "string",
                                        "example": "cash"
                                    },
                                    "district_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order confirmed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OrderConfirmation"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The names field is required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/cancelOrder/{id}": {
            "post": {
                "tags": [
                    "Order"
                ],
                "summary": "Cancel order",
                "operationId": "400c7d79f5e2e8a6e5c82dee9c33fc9b",
                "responses": {
                    "200": {
                        "description": "Order cancelled successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order cancelled successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Order has already been confirmed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order has already been confirmed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/dashboardOrders": {
            "get": {
                "tags": [
                    "Order"
                ],
                "summary": "Get orders for dashboard",
                "operationId": "690d27772b152097fcdce31e2b545fd8",
                "responses": {
                    "200": {
                        "description": "Orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total": {
                                            "type": "integer",
                                            "example": "10"
                                        },
                                        "pending": {
                                            "type": "integer",
                                            "example": "5"
                                        },
                                        "confirmed": {
                                            "type": "integer",
                                            "example": "3"
                                        },
                                        "cancelled": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "paid": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/permission": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get list of permissions",
                "description": "Returns list of permissions",
                "operationId": "df6a3d032051f50edcf7033755f7f47c",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Permission"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/permission/{id}": {
            "get": {
                "tags": [
                    "Permissions"
                ],
                "summary": "Get permission information",
                "description": "Returns permission data",
                "operationId": "5cef7a50ccbbdf8a919345848b1a5d51",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Permission ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Permission"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Permission not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Permission not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/product": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Show all products",
                "description": "SHOW ALL PRODUCTS WITH PAGINATION OF 12",
                "operationId": "a3d9c4fc9174ac2dce46f31a6151d248",
                "responses": {
                    "200": {
                        "description": "Show all products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "https://develop.garzasoft.com/dgush-backend/public/api/product?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "https://develop.garzasoft.com/dgush-backend/public/api/product?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "https://develop.garzasoft.com/dgush-backend/public/api/product"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": "12"
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": "10"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Create product",
                "description": "CREATE PRODUCT",
                "operationId": "67c992113fd5cb61dc279e8722b88f80",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "detailweb",
                                    "price1",
                                    "price2",
                                    "score",
                                    "subcategory_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Product 1"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Description of product 1"
                                    },
                                    "detailweb": {
                                        "type": "string",
                                        "example": "Detail of product 1"
                                    },
                                    "price1": {
                                        "type": "number",
                                        "example": "100.00"
                                    },
                                    "price2": {
                                        "type": "number",
                                        "example": "90.00"
                                    },
                                    "score": {
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "subcategory_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subcategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Subcategory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/product/search": {
            "post": {
                "tags": [
                    "Product"
                ],
                "summary": "Search products",
                "description": "SEARCH PRODUCTS",
                "operationId": "442b31105879bd6f5783ac7eef1b2bb0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "filter"
                                ],
                                "properties": {
                                    "filter": {
                                        "properties": {
                                            "search": {
                                                "type": "string",
                                                "example": "Product 1"
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "onsale"
                                            },
                                            "score": {
                                                "type": "integer",
                                                "example": "5"
                                            },
                                            "category": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "vestidos"
                                                }
                                            },
                                            "price": {
                                                "type": "array",
                                                "items": {
                                                    "type": "number",
                                                    "example": "100.00, 200.00"
                                                }
                                            },
                                            "color": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "azul-oscuro"
                                                }
                                            },
                                            "size": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string",
                                                    "example": "S"
                                                }
                                            },
                                            "sort": {
                                                "type": "string",
                                                "example": "id"
                                            },
                                            "direction": {
                                                "type": "string",
                                                "example": "desc"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Search products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "current_page": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Product"
                                            }
                                        },
                                        "first_page_url": {
                                            "type": "string",
                                            "example": "https://develop.garzasoft.com/dgush-backend/public/api/product?page=1"
                                        },
                                        "from": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "next_page_url": {
                                            "type": "string",
                                            "example": "https://develop.garzasoft.com/dgush-backend/public/api/product?page=2"
                                        },
                                        "path": {
                                            "type": "string",
                                            "example": "https://develop.garzasoft.com/dgush-backend/public/api/product"
                                        },
                                        "per_page": {
                                            "type": "integer",
                                            "example": "12"
                                        },
                                        "prev_page_url": {
                                            "type": "string",
                                            "example": "null"
                                        },
                                        "to": {
                                            "type": "integer",
                                            "example": "10"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/products": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Get all products",
                "description": "Get all products with trashed",
                "operationId": "2c0d0b6cacb67863f9ecd38bcd46d2de",
                "responses": {
                    "200": {
                        "description": "All products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Product"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/product/{id}": {
            "get": {
                "tags": [
                    "Product"
                ],
                "summary": "Show product",
                "description": "SHOW PRODUCT",
                "operationId": "7cefbeb06c9130218918020ade7c6733",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show product",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "product": {
                                            "$ref": "#/components/schemas/Product"
                                        },
                                        "colors": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Red"
                                                    },
                                                    "hex": {
                                                        "type": "string",
                                                        "example": "#FF0000"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "sizes": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Size"
                                            }
                                        },
                                        "comments": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Comment"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Update product",
                "description": "UPDATE PRODUCT",
                "operationId": "ed18a08d6b9452007841ad3210065591",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "detailweb",
                                    "price1",
                                    "price2",
                                    "score",
                                    "subcategory_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Product 1"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Description of product 1"
                                    },
                                    "detailweb": {
                                        "type": "string",
                                        "example": "Detail of product 1"
                                    },
                                    "price1": {
                                        "type": "number",
                                        "example": "100.00"
                                    },
                                    "price2": {
                                        "type": "number",
                                        "example": "90.00"
                                    },
                                    "score": {
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "subcategory_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Product updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Product"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Product"
                ],
                "summary": "Delete product",
                "description": "DELETE PRODUCT",
                "operationId": "9e5a87230e5a810264ec7a0605b90e43",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Product has relations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product has relations"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/product/setColors/{id}": {
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Set colors",
                "operationId": "717938ec99b553178d2e05304a9f361c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "colors"
                                ],
                                "properties": {
                                    "colors": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Colors set",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Color"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "colors": [
                                                    "The colors field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/product/setSizes/{id}": {
            "put": {
                "tags": [
                    "Product"
                ],
                "summary": "Set sizes",
                "operationId": "11a60ba38d1dca46fa346038d61aadf6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "sizes"
                                ],
                                "properties": {
                                    "sizes": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "example": "1"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Sizes set",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Size"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "sizes": [
                                                    "The sizes field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "dgush-backend/public/api/product-details": {
            "get": {
                "tags": [
                    "Product Details"
                ],
                "summary": "Get all product details",
                "operationId": "3db320e993ece7f85d3d371b1fb9dd38",
                "responses": {
                    "200": {
                        "description": "Get all product details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ProductDetailsResource"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Product Details"
                ],
                "summary": "Create a product details",
                "operationId": "8d3774fe0874edff3b9e9a190529a60e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "stock",
                                    "product_id",
                                    "color_id",
                                    "size_id"
                                ],
                                "properties": {
                                    "stock": {
                                        "type": "integer",
                                        "example": "10"
                                    },
                                    "product_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "color_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "size_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Create a product details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProductDetailsResource"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The given data was invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The stock field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/province": {
            "get": {
                "tags": [
                    "Province"
                ],
                "summary": "Get all provinces",
                "operationId": "98382c9169bff7abdac3bf6c6c2f35d8",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Province"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/province/{id}": {
            "get": {
                "tags": [
                    "Province"
                ],
                "summary": "Get province by id",
                "operationId": "eefc0a02b536f7de9011bf52ce7b53f5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of province",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Province"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/size": {
            "get": {
                "tags": [
                    "Size"
                ],
                "summary": "Get list of all sizes",
                "description": "Returns list of all sizes",
                "operationId": "getSizes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Size"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Size"
                ],
                "summary": "Store new size",
                "description": "Store new size",
                "operationId": "storeSize",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Small"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Size created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Size"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/size/{id}": {
            "get": {
                "tags": [
                    "Size"
                ],
                "summary": "Get size by id",
                "description": "Returns size by id",
                "operationId": "getSize",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of size to return",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Size"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Size not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Size not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Size"
                ],
                "summary": "Update size by id",
                "description": "Update size by id",
                "operationId": "updateSize",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of size to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Medium"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Size updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Size"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Size not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Size not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Size"
                ],
                "summary": "Delete size by id",
                "description": "Delete size by id",
                "operationId": "deleteSize",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of size to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Size deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Size deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Size not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Size not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Size has products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Size is associated with products"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/subcategory": {
            "get": {
                "tags": [
                    "Subcategory"
                ],
                "summary": "Get all subcategories",
                "description": "SHOW ALL SUBCATEGORIES",
                "operationId": "2d337a1c92342d48baa4d719bb185eab",
                "responses": {
                    "200": {
                        "description": "List of all subcategories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Subcategory"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Subcategory"
                ],
                "summary": "Create a new subcategory",
                "description": "CREATE A NEW SUBCATEGORY",
                "operationId": "f7f59c0bfd71698f2f386d4f988601d1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Subcategory 1"
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subcategory created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subcategory"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/subcategory/search": {
            "get": {
                "tags": [
                    "Subcategory"
                ],
                "summary": "Search subcategories",
                "description": "SEARCH SUBCATEGORIES",
                "operationId": "8fdf57f27354c56428723e27596b79f0",
                "responses": {
                    "200": {
                        "description": "Search subcategories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Subcategory"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/subcategory/{id}": {
            "get": {
                "tags": [
                    "Subcategory"
                ],
                "summary": "Get a subcategory",
                "description": "SHOW A SUBCATEGORY",
                "operationId": "04e5502e8f901fb3ffdb84b15106fbdb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the subcategory",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subcategory found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subcategory"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subcategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Subcategory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Subcategory"
                ],
                "summary": "Update a subcategory",
                "description": "UPDATE A SUBCATEGORY",
                "operationId": "143dd234414740348e75d3d69a5fbfb6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the subcategory",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Subcategory 1"
                                    },
                                    "order": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "category_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subcategory updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Subcategory"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subcategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Subcategory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Subcategory"
                ],
                "summary": "Delete a subcategory",
                "description": "DELETE A SUBCATEGORY",
                "operationId": "93d8b1566ef3248963b3ff74cd54c07a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Subcategory ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subcategory deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Subcategory deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subcategory not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Subcategory not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Subcategory has products",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Subcategory has products"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/subcategoryMostPopular": {
            "get": {
                "tags": [
                    "Subcategory"
                ],
                "summary": "Most popular subcategories",
                "operationId": "ec0e55056db865e95092d0a541343bf5",
                "responses": {
                    "200": {
                        "description": "List of most popular subcategories",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Subcategory"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dgush-backend/public/api/typeuser": {
            "get": {
                "tags": [
                    "Type User"
                ],
                "summary": "List Type User",
                "operationId": "e1ef9f7eb85d8b6f64a83a859e6ec02c",
                "responses": {
                    "200": {
                        "description": "List of Type User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TypeUser"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Type User"
                ],
                "summary": "Create Type User",
                "operationId": "0707356db2eee5db83d90d257451affc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Type User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The given data was invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/typeuser/{id}": {
            "get": {
                "tags": [
                    "Type User"
                ],
                "summary": "Show Type User",
                "operationId": "39fb06522d2f05360df19df159f552f3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Type User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Show Type User",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Type User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Type User"
                ],
                "summary": "Update Type User",
                "operationId": "9f9e3cc70b3a38e9bf00df04f516aad4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Type User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "example": 1
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Type User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TypeUser"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Type User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "The given data was invalid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Type User"
                ],
                "summary": "Delete Type User",
                "operationId": "2644f4afc129ce25cbda28edabfd67b3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Type User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Type User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Type User deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Type User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Type User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Type User has accesses or permissions associated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Type User has accesses associated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/user": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "operationId": "bb7312ee8e0ae732c99d92e4a2fb4ed2",
                "responses": {
                    "200": {
                        "description": "List of users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/User"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Store a new user",
                "operationId": "1a77fce669ca953fa2b1dfbd04af1d6d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "names",
                                    "email",
                                    "password",
                                    "typeuser_id"
                                ],
                                "properties": {
                                    "names": {
                                        "description": "Full name of the user",
                                        "type": "string",
                                        "example": "D'Gush Frontend"
                                    },
                                    "lastnames": {
                                        "description": "Last name of the user",
                                        "type": "string",
                                        "example": "Admin"
                                    },
                                    "email": {
                                        "description": "Email of the user",
                                        "type": "string",
                                        "example": "dgush@frontend.com"
                                    },
                                    "password": {
                                        "description": "Password of the user",
                                        "type": "string",
                                        "example": "12345678"
                                    },
                                    "typeuser_id": {
                                        "description": "Type of user",
                                        "type": "integer",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "names": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The names field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                },
                                                "typeuser_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The typeuser id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Typeuser not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Typeuser not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/dgush-backend/public/api/user/{id}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "operationId": "6dcd9cfd233e59693adca6665ee9c26f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user by ID",
                "operationId": "edcf7eeedf43fbfdfa9cb0093993939f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "names",
                                    "email",
                                    "password",
                                    "typeuser_id"
                                ],
                                "properties": {
                                    "names": {
                                        "description": "Full name of the user",
                                        "type": "string",
                                        "example": "D'Gush Frontend"
                                    },
                                    "lastnames": {
                                        "description": "Last name of the user",
                                        "type": "string",
                                        "example": "Admin"
                                    },
                                    "email": {
                                        "description": "Email of the user",
                                        "type": "string",
                                        "example": "dgush@gmail.com"
                                    },
                                    "password": {
                                        "description": "Password of the user",
                                        "type": "string",
                                        "example": "12345678"
                                    },
                                    "typeuser_id": {
                                        "description": "Type of user",
                                        "type": "integer",
                                        "example": "2"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Typeuser or User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "names": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The names field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                },
                                                "typeuser_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The typeuser id field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Users"
                ],
                "summary": "Delete user by ID",
                "operationId": "feae2622a8906d1bfd0af548fe197375",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "1"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "You cannot delete the admin user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You cannot delete the admin user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ProductDetailsResource": {
                "title": "ProductDetailsResource",
                "description": "ProductDetailsResource",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Product Name"
                    },
                    "stock": {
                        "type": "integer",
                        "example": "10"
                    },
                    "colorName": {
                        "type": "string",
                        "example": "Red"
                    },
                    "sizeName": {
                        "type": "string",
                        "example": "Large"
                    },
                    "status": {
                        "type": "string",
                        "example": "active"
                    },
                    "product_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "color_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "size_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Access": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "optionmenu_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "typeuser_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Category": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Category 1"
                    },
                    "order": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Color": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Red"
                    },
                    "value": {
                        "type": "string",
                        "example": "red"
                    },
                    "hex": {
                        "type": "string",
                        "example": "#FF0000"
                    }
                },
                "type": "object"
            },
            "Comment": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "description": {
                        "type": "string",
                        "example": "This is a comment"
                    },
                    "score": {
                        "type": "integer",
                        "example": "5"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "product_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Coupon": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "10% Off"
                    },
                    "description": {
                        "type": "string",
                        "example": "10% discount on all purchases."
                    },
                    "code": {
                        "type": "string",
                        "example": "10OFF"
                    },
                    "type": {
                        "type": "string",
                        "example": "percentage"
                    },
                    "value": {
                        "type": "number",
                        "example": "10"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-05-26 14:39:51"
                    }
                },
                "type": "object"
            },
            "CouponRequest": {
                "required": [
                    "name",
                    "description",
                    "code",
                    "type",
                    "value",
                    "expires_at"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "10% Off"
                    },
                    "description": {
                        "type": "string",
                        "example": "10% discount on all purchases."
                    },
                    "code": {
                        "type": "string",
                        "example": "10OFF"
                    },
                    "type": {
                        "type": "string",
                        "enum": [
                            "percentage",
                            "discount"
                        ],
                        "example": "percentage"
                    },
                    "value": {
                        "type": "number",
                        "example": "10"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2022-05-26 14:39:51"
                    }
                },
                "type": "object"
            },
            "Department": {
                "title": "Department",
                "description": "Department model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Pendidikan"
                    },
                    "provinces": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Province"
                        }
                    }
                },
                "type": "object"
            },
            "District": {
                "title": "District",
                "description": "District model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Kota Bandung"
                    },
                    "province_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "GroupMenu": {
                "title": "GroupMenu",
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Admin"
                    },
                    "icon": {
                        "type": "string",
                        "example": "fas fa-user"
                    },
                    "order": {
                        "type": "number",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "HasPermission": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "typeuser_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "permission_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "OptionMenu": {
                "title": "OptionMenu",
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Dashboard"
                    },
                    "route": {
                        "type": "string",
                        "example": "dashboard"
                    },
                    "order": {
                        "type": "number",
                        "example": "1"
                    },
                    "icon": {
                        "type": "string",
                        "example": "fas fa-tachometer-alt"
                    },
                    "groupmenu_id": {
                        "type": "number",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Order": {
                "title": "Order",
                "description": "Order model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "subtotal": {
                        "type": "decimal",
                        "example": "100.00"
                    },
                    "discount": {
                        "type": "decimal",
                        "example": "10.00"
                    },
                    "sendCost": {
                        "type": "decimal",
                        "example": "5.00"
                    },
                    "total": {
                        "type": "decimal",
                        "example": "90.00"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "date": {
                        "type": "timestamp",
                        "example": "2024-05-26 14:40:02"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "coupon_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "orderItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        }
                    },
                    "coupon": {
                        "$ref": "#/components/schemas/Coupon"
                    }
                },
                "type": "object"
            },
            "OrderRequest": {
                "title": "OrderRequest",
                "description": "Order request model",
                "properties": {
                    "subtotal": {
                        "type": "decimal",
                        "example": "100.00"
                    },
                    "total": {
                        "type": "decimal",
                        "example": "90.00"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "date": {
                        "type": "timestamp",
                        "example": "2024-05-26 14:40:02"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "coupon_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "OrderConfirmation": {
                "title": "OrderConfirmation",
                "description": "Order confirmation model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "subtotal": {
                        "type": "decimal",
                        "example": "100.00"
                    },
                    "discount": {
                        "type": "decimal",
                        "example": "10.00"
                    },
                    "sendCost": {
                        "type": "decimal",
                        "example": "5.00"
                    },
                    "total": {
                        "type": "decimal",
                        "example": "90.00"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "date": {
                        "type": "timestamp",
                        "example": "2024-05-26 14:40:02"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "coupon_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "orderItems": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OrderItem"
                        }
                    },
                    "coupon": {
                        "$ref": "#/components/schemas/Coupon"
                    },
                    "sendInformation": {
                        "$ref": "#/components/schemas/SendInformation"
                    }
                },
                "type": "object"
            },
            "OrderItem": {
                "title": "OrderItem",
                "description": "OrderItem model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    },
                    "product_detail_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "order_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "productDetail": {
                        "$ref": "#/components/schemas/ProductDetails"
                    }
                },
                "type": "object"
            },
            "Permission": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "permission"
                    },
                    "route": {
                        "type": "string",
                        "example": "permission"
                    }
                },
                "type": "object"
            },
            "Product": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Product 1"
                    },
                    "description": {
                        "type": "string",
                        "example": "Description of product 1"
                    },
                    "detailweb": {
                        "type": "string",
                        "example": "Detail of product 1"
                    },
                    "price1": {
                        "type": "number",
                        "example": "100.00"
                    },
                    "price2": {
                        "type": "number",
                        "example": "90.00"
                    },
                    "score": {
                        "type": "integer",
                        "example": "5"
                    },
                    "status": {
                        "type": "'onsale'|'new'",
                        "example": "onsale"
                    },
                    "subcategory_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "image": {
                        "type": "string",
                        "example": "image.jpg"
                    }
                },
                "type": "object"
            },
            "ProductColor": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "product_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "color_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "ProductDetails": {
                "title": "ProductDetails",
                "description": "ProductDetails model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "stock": {
                        "type": "integer",
                        "example": "10"
                    },
                    "product_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "color_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "size_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    },
                    "color": {
                        "$ref": "#/components/schemas/Color"
                    },
                    "size": {
                        "$ref": "#/components/schemas/Size"
                    }
                },
                "type": "object"
            },
            "ProductSize": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "product_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "size_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Province": {
                "title": "Province",
                "description": "Province model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Jawa Barat"
                    },
                    "districts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/District"
                        }
                    }
                },
                "type": "object"
            },
            "SendInformation": {
                "title": "SendInformation",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "names": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "dni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "email": {
                        "type": "string",
                        "example": "mail@mail.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "987654321"
                    },
                    "address": {
                        "type": "string",
                        "example": "Some address"
                    },
                    "reference": {
                        "type": "string",
                        "example": "Some reference"
                    },
                    "comment": {
                        "type": "string",
                        "example": "Some comment"
                    },
                    "method": {
                        "type": "string",
                        "example": "Some method"
                    },
                    "province_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "order_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "SendInformationRequest": {
                "title": "SendInformationRequest",
                "required": [
                    "names",
                    "dni",
                    "email",
                    "phone",
                    "address",
                    "reference",
                    "comment",
                    "method",
                    "province_id",
                    "order_id"
                ],
                "properties": {
                    "names": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "dni": {
                        "type": "string",
                        "example": "12345678"
                    },
                    "email": {
                        "type": "string",
                        "example": "mail@mail.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "987654321"
                    },
                    "address": {
                        "type": "string",
                        "example": "Some address"
                    },
                    "reference": {
                        "type": "string",
                        "example": "Some reference"
                    },
                    "comment": {
                        "type": "string",
                        "example": "Some comment"
                    },
                    "method": {
                        "type": "string",
                        "example": "Some method"
                    },
                    "province_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "order_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "Size": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Small"
                    },
                    "value": {
                        "type": "string",
                        "example": "S"
                    }
                },
                "type": "object"
            },
            "Subcategory": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "T-Shirts"
                    },
                    "value": {
                        "type": "string",
                        "example": "t-shirts"
                    },
                    "order": {
                        "type": "integer",
                        "example": "1"
                    },
                    "score": {
                        "type": "number",
                        "example": "5.0"
                    },
                    "image": {
                        "type": "string",
                        "example": "t-shirts.jpg"
                    },
                    "category_id": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            },
            "TypeUser": {
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Admin"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "number",
                        "example": "11"
                    },
                    "names": {
                        "type": "string",
                        "example": "D Gush"
                    },
                    "lastnames": {
                        "type": "string",
                        "example": "Admin"
                    },
                    "email": {
                        "type": "string",
                        "example": "dgush@gmail.com"
                    },
                    "typeuser_id": {
                        "type": "number",
                        "example": "2"
                    }
                },
                "type": "object"
            },
            "WishItem": {
                "title": "WishItem",
                "description": "WishItem model",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "product_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "product": {
                        "$ref": "#/components/schemas/Product"
                    }
                },
                "type": "object"
            },
            "WishItemRequest": {
                "properties": {
                    "product_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "color_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "size_id": {
                        "type": "integer",
                        "example": "1"
                    },
                    "quantity": {
                        "type": "integer",
                        "example": "1"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    }
}